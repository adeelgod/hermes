package com.m11n.hermes.core.model;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlRootElement;

import org.joda.beans.BeanDefinition;
import org.joda.beans.MetaBean;
import org.joda.beans.PropertyDefinition;
import org.joda.beans.impl.direct.DirectBean;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;

import java.math.BigDecimal;
import java.util.Map;
import org.joda.beans.Bean;
import org.joda.beans.BeanBuilder;
import org.joda.beans.JodaBeanUtils;
import org.joda.beans.MetaProperty;
import org.joda.beans.Property;
import org.joda.beans.impl.direct.DirectBeanBuilder;
import org.joda.beans.impl.direct.DirectMetaBean;
import org.joda.beans.impl.direct.DirectMetaProperty;
import org.joda.beans.impl.direct.DirectMetaPropertyMap;

@BeanDefinition
@JsonIgnoreProperties({"meta", "metaBean"})
@XmlRootElement(name = "documents_orders")
@Entity
@Table(name = "hermes_documents_orders")
public class DocumentsOrders extends DirectBean {
    @PropertyDefinition
    @JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)
    @Id
    @Column(name = "id", unique = true)
    private Integer id;

    @PropertyDefinition
    @JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)
    @Column(name = "printjob_id")
    private Integer printjobId;

    @PropertyDefinition
    @JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)
    @Column(name = "order_id")
    private String orderId;

    @PropertyDefinition
    @JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)
    @Column(name = "group_no")
    private Integer groupNo;

    @PropertyDefinition
    @JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)
    @Column(name = "status")
    private String status;

    @PropertyDefinition
    @JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)
    @Column(name = "product_count")
    private Integer productCount;

    @PropertyDefinition
    @JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)
    @Column(name = "a_product_count")
    private Integer aProductCount;

    @PropertyDefinition
    @JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)
    @Column(name = "volume_count")
    private BigDecimal volumeCount;

    @PropertyDefinition
    @JsonSerialize
    @Column(name = "type")
    private String type;
    

    //------------------------- AUTOGENERATED START -------------------------
    ///CLOVER:OFF
    /**
     * The meta-bean for {@code DocumentsOrders}.
     * @return the meta-bean, not null
     */
    public static DocumentsOrders.Meta meta() {
        return DocumentsOrders.Meta.INSTANCE;
    }

    static {
        JodaBeanUtils.registerMetaBean(DocumentsOrders.Meta.INSTANCE);
    }

    @Override
    public DocumentsOrders.Meta metaBean() {
        return DocumentsOrders.Meta.INSTANCE;
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the id.
     * @return the value of the property
     */
    public Integer getId() {
        return id;
    }

    /**
     * Sets the id.
     * @param id  the new value of the property
     */
    public void setId(Integer id) {
        this.id = id;
    }

    /**
     * Gets the the {@code id} property.
     * @return the property, not null
     */
    public final Property<Integer> id() {
        return metaBean().id().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the printjobId.
     * @return the value of the property
     */
    public Integer getPrintjobId() {
        return printjobId;
    }

    /**
     * Sets the printjobId.
     * @param printjobId  the new value of the property
     */
    public void setPrintjobId(Integer printjobId) {
        this.printjobId = printjobId;
    }

    /**
     * Gets the the {@code printjobId} property.
     * @return the property, not null
     */
    public final Property<Integer> printjobId() {
        return metaBean().printjobId().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the orderId.
     * @return the value of the property
     */
    public String getOrderId() {
        return orderId;
    }

    /**
     * Sets the orderId.
     * @param orderId  the new value of the property
     */
    public void setOrderId(String orderId) {
        this.orderId = orderId;
    }

    /**
     * Gets the the {@code orderId} property.
     * @return the property, not null
     */
    public final Property<String> orderId() {
        return metaBean().orderId().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the groupNo.
     * @return the value of the property
     */
    public Integer getGroupNo() {
        return groupNo;
    }

    /**
     * Sets the groupNo.
     * @param groupNo  the new value of the property
     */
    public void setGroupNo(Integer groupNo) {
        this.groupNo = groupNo;
    }

    /**
     * Gets the the {@code groupNo} property.
     * @return the property, not null
     */
    public final Property<Integer> groupNo() {
        return metaBean().groupNo().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the status.
     * @return the value of the property
     */
    public String getStatus() {
        return status;
    }

    /**
     * Sets the status.
     * @param status  the new value of the property
     */
    public void setStatus(String status) {
        this.status = status;
    }

    /**
     * Gets the the {@code status} property.
     * @return the property, not null
     */
    public final Property<String> status() {
        return metaBean().status().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the productCount.
     * @return the value of the property
     */
    public Integer getProductCount() {
        return productCount;
    }

    /**
     * Sets the productCount.
     * @param productCount  the new value of the property
     */
    public void setProductCount(Integer productCount) {
        this.productCount = productCount;
    }

    /**
     * Gets the the {@code productCount} property.
     * @return the property, not null
     */
    public final Property<Integer> productCount() {
        return metaBean().productCount().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the aProductCount.
     * @return the value of the property
     */
    public Integer getAProductCount() {
        return aProductCount;
    }

    /**
     * Sets the aProductCount.
     * @param aProductCount  the new value of the property
     */
    public void setAProductCount(Integer aProductCount) {
        this.aProductCount = aProductCount;
    }

    /**
     * Gets the the {@code aProductCount} property.
     * @return the property, not null
     */
    public final Property<Integer> aProductCount() {
        return metaBean().aProductCount().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the volumeCount.
     * @return the value of the property
     */
    public BigDecimal getVolumeCount() {
        return volumeCount;
    }

    /**
     * Sets the volumeCount.
     * @param volumeCount  the new value of the property
     */
    public void setVolumeCount(BigDecimal volumeCount) {
        this.volumeCount = volumeCount;
    }

    /**
     * Gets the the {@code volumeCount} property.
     * @return the property, not null
     */
    public final Property<BigDecimal> volumeCount() {
        return metaBean().volumeCount().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the type.
     * @return the value of the property
     */
    public String getType() {
        return type;
    }

    /**
     * Sets the type.
     * @param type  the new value of the property
     */
    public void setType(String type) {
        this.type = type;
    }

    /**
     * Gets the the {@code type} property.
     * @return the property, not null
     */
    public final Property<String> type() {
        return metaBean().type().createProperty(this);
    }

    //-----------------------------------------------------------------------
    @Override
    public DocumentsOrders clone() {
        return JodaBeanUtils.cloneAlways(this);
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == this) {
            return true;
        }
        if (obj != null && obj.getClass() == this.getClass()) {
            DocumentsOrders other = (DocumentsOrders) obj;
            return JodaBeanUtils.equal(getId(), other.getId()) &&
                    JodaBeanUtils.equal(getPrintjobId(), other.getPrintjobId()) &&
                    JodaBeanUtils.equal(getOrderId(), other.getOrderId()) &&
                    JodaBeanUtils.equal(getGroupNo(), other.getGroupNo()) &&
                    JodaBeanUtils.equal(getStatus(), other.getStatus()) &&
                    JodaBeanUtils.equal(getProductCount(), other.getProductCount()) &&
                    JodaBeanUtils.equal(getAProductCount(), other.getAProductCount()) &&
                    JodaBeanUtils.equal(getVolumeCount(), other.getVolumeCount()) &&
                    JodaBeanUtils.equal(getType(), other.getType());
        }
        return false;
    }

    @Override
    public int hashCode() {
        int hash = getClass().hashCode();
        hash = hash * 31 + JodaBeanUtils.hashCode(getId());
        hash = hash * 31 + JodaBeanUtils.hashCode(getPrintjobId());
        hash = hash * 31 + JodaBeanUtils.hashCode(getOrderId());
        hash = hash * 31 + JodaBeanUtils.hashCode(getGroupNo());
        hash = hash * 31 + JodaBeanUtils.hashCode(getStatus());
        hash = hash * 31 + JodaBeanUtils.hashCode(getProductCount());
        hash = hash * 31 + JodaBeanUtils.hashCode(getAProductCount());
        hash = hash * 31 + JodaBeanUtils.hashCode(getVolumeCount());
        hash = hash * 31 + JodaBeanUtils.hashCode(getType());
        return hash;
    }

    @Override
    public String toString() {
        StringBuilder buf = new StringBuilder(320);
        buf.append("DocumentsOrders{");
        int len = buf.length();
        toString(buf);
        if (buf.length() > len) {
            buf.setLength(buf.length() - 2);
        }
        buf.append('}');
        return buf.toString();
    }

    protected void toString(StringBuilder buf) {
        buf.append("id").append('=').append(JodaBeanUtils.toString(getId())).append(',').append(' ');
        buf.append("printjobId").append('=').append(JodaBeanUtils.toString(getPrintjobId())).append(',').append(' ');
        buf.append("orderId").append('=').append(JodaBeanUtils.toString(getOrderId())).append(',').append(' ');
        buf.append("groupNo").append('=').append(JodaBeanUtils.toString(getGroupNo())).append(',').append(' ');
        buf.append("status").append('=').append(JodaBeanUtils.toString(getStatus())).append(',').append(' ');
        buf.append("productCount").append('=').append(JodaBeanUtils.toString(getProductCount())).append(',').append(' ');
        buf.append("aProductCount").append('=').append(JodaBeanUtils.toString(getAProductCount())).append(',').append(' ');
        buf.append("volumeCount").append('=').append(JodaBeanUtils.toString(getVolumeCount())).append(',').append(' ');
        buf.append("type").append('=').append(JodaBeanUtils.toString(getType())).append(',').append(' ');
    }

    //-----------------------------------------------------------------------
    /**
     * The meta-bean for {@code DocumentsOrders}.
     */
    public static class Meta extends DirectMetaBean {
        /**
         * The singleton instance of the meta-bean.
         */
        static final Meta INSTANCE = new Meta();

        /**
         * The meta-property for the {@code id} property.
         */
        private final MetaProperty<Integer> id = DirectMetaProperty.ofReadWrite(
                this, "id", DocumentsOrders.class, Integer.class);
        /**
         * The meta-property for the {@code printjobId} property.
         */
        private final MetaProperty<Integer> printjobId = DirectMetaProperty.ofReadWrite(
                this, "printjobId", DocumentsOrders.class, Integer.class);
        /**
         * The meta-property for the {@code orderId} property.
         */
        private final MetaProperty<String> orderId = DirectMetaProperty.ofReadWrite(
                this, "orderId", DocumentsOrders.class, String.class);
        /**
         * The meta-property for the {@code groupNo} property.
         */
        private final MetaProperty<Integer> groupNo = DirectMetaProperty.ofReadWrite(
                this, "groupNo", DocumentsOrders.class, Integer.class);
        /**
         * The meta-property for the {@code status} property.
         */
        private final MetaProperty<String> status = DirectMetaProperty.ofReadWrite(
                this, "status", DocumentsOrders.class, String.class);
        /**
         * The meta-property for the {@code productCount} property.
         */
        private final MetaProperty<Integer> productCount = DirectMetaProperty.ofReadWrite(
                this, "productCount", DocumentsOrders.class, Integer.class);
        /**
         * The meta-property for the {@code aProductCount} property.
         */
        private final MetaProperty<Integer> aProductCount = DirectMetaProperty.ofReadWrite(
                this, "aProductCount", DocumentsOrders.class, Integer.class);
        /**
         * The meta-property for the {@code volumeCount} property.
         */
        private final MetaProperty<BigDecimal> volumeCount = DirectMetaProperty.ofReadWrite(
                this, "volumeCount", DocumentsOrders.class, BigDecimal.class);
        /**
         * The meta-property for the {@code type} property.
         */
        private final MetaProperty<String> type = DirectMetaProperty.ofReadWrite(
                this, "type", DocumentsOrders.class, String.class);
        /**
         * The meta-properties.
         */
        private final Map<String, MetaProperty<?>> metaPropertyMap$ = new DirectMetaPropertyMap(
                this, null,
                "id",
                "printjobId",
                "orderId",
                "groupNo",
                "status",
                "productCount",
                "aProductCount",
                "volumeCount",
                "type");

        /**
         * Restricted constructor.
         */
        protected Meta() {
        }

        @Override
        protected MetaProperty<?> metaPropertyGet(String propertyName) {
            switch (propertyName.hashCode()) {
                case 3355:  // id
                    return id;
                case 148871979:  // printjobId
                    return printjobId;
                case -1207110391:  // orderId
                    return orderId;
                case 293428384:  // groupNo
                    return groupNo;
                case -892481550:  // status
                    return status;
                case 988565856:  // productCount
                    return productCount;
                case -1537401759:  // aProductCount
                    return aProductCount;
                case -900736491:  // volumeCount
                    return volumeCount;
                case 3575610:  // type
                    return type;
            }
            return super.metaPropertyGet(propertyName);
        }

        @Override
        public BeanBuilder<? extends DocumentsOrders> builder() {
            return new DirectBeanBuilder<DocumentsOrders>(new DocumentsOrders());
        }

        @Override
        public Class<? extends DocumentsOrders> beanType() {
            return DocumentsOrders.class;
        }

        @Override
        public Map<String, MetaProperty<?>> metaPropertyMap() {
            return metaPropertyMap$;
        }

        //-----------------------------------------------------------------------
        /**
         * The meta-property for the {@code id} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<Integer> id() {
            return id;
        }

        /**
         * The meta-property for the {@code printjobId} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<Integer> printjobId() {
            return printjobId;
        }

        /**
         * The meta-property for the {@code orderId} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<String> orderId() {
            return orderId;
        }

        /**
         * The meta-property for the {@code groupNo} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<Integer> groupNo() {
            return groupNo;
        }

        /**
         * The meta-property for the {@code status} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<String> status() {
            return status;
        }

        /**
         * The meta-property for the {@code productCount} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<Integer> productCount() {
            return productCount;
        }

        /**
         * The meta-property for the {@code aProductCount} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<Integer> aProductCount() {
            return aProductCount;
        }

        /**
         * The meta-property for the {@code volumeCount} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<BigDecimal> volumeCount() {
            return volumeCount;
        }

        /**
         * The meta-property for the {@code type} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<String> type() {
            return type;
        }

        //-----------------------------------------------------------------------
        @Override
        protected Object propertyGet(Bean bean, String propertyName, boolean quiet) {
            switch (propertyName.hashCode()) {
                case 3355:  // id
                    return ((DocumentsOrders) bean).getId();
                case 148871979:  // printjobId
                    return ((DocumentsOrders) bean).getPrintjobId();
                case -1207110391:  // orderId
                    return ((DocumentsOrders) bean).getOrderId();
                case 293428384:  // groupNo
                    return ((DocumentsOrders) bean).getGroupNo();
                case -892481550:  // status
                    return ((DocumentsOrders) bean).getStatus();
                case 988565856:  // productCount
                    return ((DocumentsOrders) bean).getProductCount();
                case -1537401759:  // aProductCount
                    return ((DocumentsOrders) bean).getAProductCount();
                case -900736491:  // volumeCount
                    return ((DocumentsOrders) bean).getVolumeCount();
                case 3575610:  // type
                    return ((DocumentsOrders) bean).getType();
            }
            return super.propertyGet(bean, propertyName, quiet);
        }

        @Override
        protected void propertySet(Bean bean, String propertyName, Object newValue, boolean quiet) {
            switch (propertyName.hashCode()) {
                case 3355:  // id
                    ((DocumentsOrders) bean).setId((Integer) newValue);
                    return;
                case 148871979:  // printjobId
                    ((DocumentsOrders) bean).setPrintjobId((Integer) newValue);
                    return;
                case -1207110391:  // orderId
                    ((DocumentsOrders) bean).setOrderId((String) newValue);
                    return;
                case 293428384:  // groupNo
                    ((DocumentsOrders) bean).setGroupNo((Integer) newValue);
                    return;
                case -892481550:  // status
                    ((DocumentsOrders) bean).setStatus((String) newValue);
                    return;
                case 988565856:  // productCount
                    ((DocumentsOrders) bean).setProductCount((Integer) newValue);
                    return;
                case -1537401759:  // aProductCount
                    ((DocumentsOrders) bean).setAProductCount((Integer) newValue);
                    return;
                case -900736491:  // volumeCount
                    ((DocumentsOrders) bean).setVolumeCount((BigDecimal) newValue);
                    return;
                case 3575610:  // type
                    ((DocumentsOrders) bean).setType((String) newValue);
                    return;
            }
            super.propertySet(bean, propertyName, newValue, quiet);
        }

    }

    ///CLOVER:ON
    //-------------------------- AUTOGENERATED END --------------------------
}
