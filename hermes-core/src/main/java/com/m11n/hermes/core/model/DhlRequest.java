package com.m11n.hermes.core.model;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import org.joda.beans.*;
import org.joda.beans.impl.direct.*;

import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlRootElement;
import java.util.Map;
import org.joda.beans.Bean;
import org.joda.beans.BeanBuilder;
import org.joda.beans.BeanDefinition;
import org.joda.beans.JodaBeanUtils;
import org.joda.beans.MetaProperty;
import org.joda.beans.Property;
import org.joda.beans.PropertyDefinition;
import org.joda.beans.impl.direct.DirectBean;
import org.joda.beans.impl.direct.DirectBeanBuilder;
import org.joda.beans.impl.direct.DirectMetaBean;
import org.joda.beans.impl.direct.DirectMetaProperty;
import org.joda.beans.impl.direct.DirectMetaPropertyMap;

@BeanDefinition
@JsonIgnoreProperties({"meta", "metaBean"})
@XmlRootElement(name = "data")
public class DhlRequest extends DirectBean
{
    @PropertyDefinition
    @XmlAttribute(name = "appname")
    private String appName;

    @PropertyDefinition
    @XmlAttribute(name = "password")
    private String password;

    @PropertyDefinition
    @XmlAttribute(name = "request")
    private String request;

    @PropertyDefinition
    @XmlAttribute(name = "language-code")
    private String languageCode;

    @PropertyDefinition
    @XmlAttribute(name = "piece-code")
    private String pieceCode;

    @PropertyDefinition
    @XmlAttribute(name = "piece-customer-reference")
    private String pieceCustomerReference;

    @PropertyDefinition
    @XmlAttribute(name = "tas-order-no")
    private String tasOrderNo;

    public DhlRequest() {

    }

    public DhlRequest(String request) {
        this.request = request;
    }

    //------------------------- AUTOGENERATED START -------------------------
    ///CLOVER:OFF
    /**
     * The meta-bean for {@code DhlRequest}.
     * @return the meta-bean, not null
     */
    public static DhlRequest.Meta meta() {
        return DhlRequest.Meta.INSTANCE;
    }

    static {
        JodaBeanUtils.registerMetaBean(DhlRequest.Meta.INSTANCE);
    }

    @Override
    public DhlRequest.Meta metaBean() {
        return DhlRequest.Meta.INSTANCE;
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the appName.
     * @return the value of the property
     */
    public String getAppName() {
        return appName;
    }

    /**
     * Sets the appName.
     * @param appName  the new value of the property
     */
    public void setAppName(String appName) {
        this.appName = appName;
    }

    /**
     * Gets the the {@code appName} property.
     * @return the property, not null
     */
    public final Property<String> appName() {
        return metaBean().appName().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the password.
     * @return the value of the property
     */
    public String getPassword() {
        return password;
    }

    /**
     * Sets the password.
     * @param password  the new value of the property
     */
    public void setPassword(String password) {
        this.password = password;
    }

    /**
     * Gets the the {@code password} property.
     * @return the property, not null
     */
    public final Property<String> password() {
        return metaBean().password().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the request.
     * @return the value of the property
     */
    public String getRequest() {
        return request;
    }

    /**
     * Sets the request.
     * @param request  the new value of the property
     */
    public void setRequest(String request) {
        this.request = request;
    }

    /**
     * Gets the the {@code request} property.
     * @return the property, not null
     */
    public final Property<String> request() {
        return metaBean().request().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the languageCode.
     * @return the value of the property
     */
    public String getLanguageCode() {
        return languageCode;
    }

    /**
     * Sets the languageCode.
     * @param languageCode  the new value of the property
     */
    public void setLanguageCode(String languageCode) {
        this.languageCode = languageCode;
    }

    /**
     * Gets the the {@code languageCode} property.
     * @return the property, not null
     */
    public final Property<String> languageCode() {
        return metaBean().languageCode().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the pieceCode.
     * @return the value of the property
     */
    public String getPieceCode() {
        return pieceCode;
    }

    /**
     * Sets the pieceCode.
     * @param pieceCode  the new value of the property
     */
    public void setPieceCode(String pieceCode) {
        this.pieceCode = pieceCode;
    }

    /**
     * Gets the the {@code pieceCode} property.
     * @return the property, not null
     */
    public final Property<String> pieceCode() {
        return metaBean().pieceCode().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the pieceCustomerReference.
     * @return the value of the property
     */
    public String getPieceCustomerReference() {
        return pieceCustomerReference;
    }

    /**
     * Sets the pieceCustomerReference.
     * @param pieceCustomerReference  the new value of the property
     */
    public void setPieceCustomerReference(String pieceCustomerReference) {
        this.pieceCustomerReference = pieceCustomerReference;
    }

    /**
     * Gets the the {@code pieceCustomerReference} property.
     * @return the property, not null
     */
    public final Property<String> pieceCustomerReference() {
        return metaBean().pieceCustomerReference().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the tasOrderNo.
     * @return the value of the property
     */
    public String getTasOrderNo() {
        return tasOrderNo;
    }

    /**
     * Sets the tasOrderNo.
     * @param tasOrderNo  the new value of the property
     */
    public void setTasOrderNo(String tasOrderNo) {
        this.tasOrderNo = tasOrderNo;
    }

    /**
     * Gets the the {@code tasOrderNo} property.
     * @return the property, not null
     */
    public final Property<String> tasOrderNo() {
        return metaBean().tasOrderNo().createProperty(this);
    }

    //-----------------------------------------------------------------------
    @Override
    public DhlRequest clone() {
        return JodaBeanUtils.cloneAlways(this);
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == this) {
            return true;
        }
        if (obj != null && obj.getClass() == this.getClass()) {
            DhlRequest other = (DhlRequest) obj;
            return JodaBeanUtils.equal(getAppName(), other.getAppName()) &&
                    JodaBeanUtils.equal(getPassword(), other.getPassword()) &&
                    JodaBeanUtils.equal(getRequest(), other.getRequest()) &&
                    JodaBeanUtils.equal(getLanguageCode(), other.getLanguageCode()) &&
                    JodaBeanUtils.equal(getPieceCode(), other.getPieceCode()) &&
                    JodaBeanUtils.equal(getPieceCustomerReference(), other.getPieceCustomerReference()) &&
                    JodaBeanUtils.equal(getTasOrderNo(), other.getTasOrderNo());
        }
        return false;
    }

    @Override
    public int hashCode() {
        int hash = getClass().hashCode();
        hash = hash * 31 + JodaBeanUtils.hashCode(getAppName());
        hash = hash * 31 + JodaBeanUtils.hashCode(getPassword());
        hash = hash * 31 + JodaBeanUtils.hashCode(getRequest());
        hash = hash * 31 + JodaBeanUtils.hashCode(getLanguageCode());
        hash = hash * 31 + JodaBeanUtils.hashCode(getPieceCode());
        hash = hash * 31 + JodaBeanUtils.hashCode(getPieceCustomerReference());
        hash = hash * 31 + JodaBeanUtils.hashCode(getTasOrderNo());
        return hash;
    }

    @Override
    public String toString() {
        StringBuilder buf = new StringBuilder(256);
        buf.append("DhlRequest{");
        int len = buf.length();
        toString(buf);
        if (buf.length() > len) {
            buf.setLength(buf.length() - 2);
        }
        buf.append('}');
        return buf.toString();
    }

    protected void toString(StringBuilder buf) {
        buf.append("appName").append('=').append(JodaBeanUtils.toString(getAppName())).append(',').append(' ');
        buf.append("password").append('=').append(JodaBeanUtils.toString(getPassword())).append(',').append(' ');
        buf.append("request").append('=').append(JodaBeanUtils.toString(getRequest())).append(',').append(' ');
        buf.append("languageCode").append('=').append(JodaBeanUtils.toString(getLanguageCode())).append(',').append(' ');
        buf.append("pieceCode").append('=').append(JodaBeanUtils.toString(getPieceCode())).append(',').append(' ');
        buf.append("pieceCustomerReference").append('=').append(JodaBeanUtils.toString(getPieceCustomerReference())).append(',').append(' ');
        buf.append("tasOrderNo").append('=').append(JodaBeanUtils.toString(getTasOrderNo())).append(',').append(' ');
    }

    //-----------------------------------------------------------------------
    /**
     * The meta-bean for {@code DhlRequest}.
     */
    public static class Meta extends DirectMetaBean {
        /**
         * The singleton instance of the meta-bean.
         */
        static final Meta INSTANCE = new Meta();

        /**
         * The meta-property for the {@code appName} property.
         */
        private final MetaProperty<String> appName = DirectMetaProperty.ofReadWrite(
                this, "appName", DhlRequest.class, String.class);
        /**
         * The meta-property for the {@code password} property.
         */
        private final MetaProperty<String> password = DirectMetaProperty.ofReadWrite(
                this, "password", DhlRequest.class, String.class);
        /**
         * The meta-property for the {@code request} property.
         */
        private final MetaProperty<String> request = DirectMetaProperty.ofReadWrite(
                this, "request", DhlRequest.class, String.class);
        /**
         * The meta-property for the {@code languageCode} property.
         */
        private final MetaProperty<String> languageCode = DirectMetaProperty.ofReadWrite(
                this, "languageCode", DhlRequest.class, String.class);
        /**
         * The meta-property for the {@code pieceCode} property.
         */
        private final MetaProperty<String> pieceCode = DirectMetaProperty.ofReadWrite(
                this, "pieceCode", DhlRequest.class, String.class);
        /**
         * The meta-property for the {@code pieceCustomerReference} property.
         */
        private final MetaProperty<String> pieceCustomerReference = DirectMetaProperty.ofReadWrite(
                this, "pieceCustomerReference", DhlRequest.class, String.class);
        /**
         * The meta-property for the {@code tasOrderNo} property.
         */
        private final MetaProperty<String> tasOrderNo = DirectMetaProperty.ofReadWrite(
                this, "tasOrderNo", DhlRequest.class, String.class);
        /**
         * The meta-properties.
         */
        private final Map<String, MetaProperty<?>> metaPropertyMap$ = new DirectMetaPropertyMap(
                this, null,
                "appName",
                "password",
                "request",
                "languageCode",
                "pieceCode",
                "pieceCustomerReference",
                "tasOrderNo");

        /**
         * Restricted constructor.
         */
        protected Meta() {
        }

        @Override
        protected MetaProperty<?> metaPropertyGet(String propertyName) {
            switch (propertyName.hashCode()) {
                case -794136500:  // appName
                    return appName;
                case 1216985755:  // password
                    return password;
                case 1095692943:  // request
                    return request;
                case -2092349083:  // languageCode
                    return languageCode;
                case 113280507:  // pieceCode
                    return pieceCode;
                case -513210433:  // pieceCustomerReference
                    return pieceCustomerReference;
                case -1532885207:  // tasOrderNo
                    return tasOrderNo;
            }
            return super.metaPropertyGet(propertyName);
        }

        @Override
        public BeanBuilder<? extends DhlRequest> builder() {
            return new DirectBeanBuilder<DhlRequest>(new DhlRequest());
        }

        @Override
        public Class<? extends DhlRequest> beanType() {
            return DhlRequest.class;
        }

        @Override
        public Map<String, MetaProperty<?>> metaPropertyMap() {
            return metaPropertyMap$;
        }

        //-----------------------------------------------------------------------
        /**
         * The meta-property for the {@code appName} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<String> appName() {
            return appName;
        }

        /**
         * The meta-property for the {@code password} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<String> password() {
            return password;
        }

        /**
         * The meta-property for the {@code request} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<String> request() {
            return request;
        }

        /**
         * The meta-property for the {@code languageCode} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<String> languageCode() {
            return languageCode;
        }

        /**
         * The meta-property for the {@code pieceCode} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<String> pieceCode() {
            return pieceCode;
        }

        /**
         * The meta-property for the {@code pieceCustomerReference} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<String> pieceCustomerReference() {
            return pieceCustomerReference;
        }

        /**
         * The meta-property for the {@code tasOrderNo} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<String> tasOrderNo() {
            return tasOrderNo;
        }

        //-----------------------------------------------------------------------
        @Override
        protected Object propertyGet(Bean bean, String propertyName, boolean quiet) {
            switch (propertyName.hashCode()) {
                case -794136500:  // appName
                    return ((DhlRequest) bean).getAppName();
                case 1216985755:  // password
                    return ((DhlRequest) bean).getPassword();
                case 1095692943:  // request
                    return ((DhlRequest) bean).getRequest();
                case -2092349083:  // languageCode
                    return ((DhlRequest) bean).getLanguageCode();
                case 113280507:  // pieceCode
                    return ((DhlRequest) bean).getPieceCode();
                case -513210433:  // pieceCustomerReference
                    return ((DhlRequest) bean).getPieceCustomerReference();
                case -1532885207:  // tasOrderNo
                    return ((DhlRequest) bean).getTasOrderNo();
            }
            return super.propertyGet(bean, propertyName, quiet);
        }

        @Override
        protected void propertySet(Bean bean, String propertyName, Object newValue, boolean quiet) {
            switch (propertyName.hashCode()) {
                case -794136500:  // appName
                    ((DhlRequest) bean).setAppName((String) newValue);
                    return;
                case 1216985755:  // password
                    ((DhlRequest) bean).setPassword((String) newValue);
                    return;
                case 1095692943:  // request
                    ((DhlRequest) bean).setRequest((String) newValue);
                    return;
                case -2092349083:  // languageCode
                    ((DhlRequest) bean).setLanguageCode((String) newValue);
                    return;
                case 113280507:  // pieceCode
                    ((DhlRequest) bean).setPieceCode((String) newValue);
                    return;
                case -513210433:  // pieceCustomerReference
                    ((DhlRequest) bean).setPieceCustomerReference((String) newValue);
                    return;
                case -1532885207:  // tasOrderNo
                    ((DhlRequest) bean).setTasOrderNo((String) newValue);
                    return;
            }
            super.propertySet(bean, propertyName, newValue, quiet);
        }

    }

    ///CLOVER:ON
    //-------------------------- AUTOGENERATED END --------------------------
}
