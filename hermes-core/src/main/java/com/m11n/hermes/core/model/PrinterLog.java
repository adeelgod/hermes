package com.m11n.hermes.core.model;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import org.hibernate.annotations.GenericGenerator;
import org.springframework.data.annotation.Id;

import javax.persistence.*;
import javax.xml.bind.annotation.XmlRootElement;
import java.util.Date;
import java.util.Map;
import org.joda.beans.Bean;
import org.joda.beans.BeanBuilder;
import org.joda.beans.BeanDefinition;
import org.joda.beans.JodaBeanUtils;
import org.joda.beans.MetaProperty;
import org.joda.beans.Property;
import org.joda.beans.PropertyDefinition;
import org.joda.beans.impl.direct.DirectBean;
import org.joda.beans.impl.direct.DirectBeanBuilder;
import org.joda.beans.impl.direct.DirectMetaBean;
import org.joda.beans.impl.direct.DirectMetaProperty;
import org.joda.beans.impl.direct.DirectMetaPropertyMap;

@BeanDefinition
@JsonIgnoreProperties({"meta", "metaBean"})
@XmlRootElement(name = "printer_log")
@Entity
@Table(name = "printer_log")
public class PrinterLog extends DirectBean
{
    @PropertyDefinition
    @JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)
    @Id
    @javax.persistence.Id
    @GeneratedValue(generator = "uuid")
    @GenericGenerator(name = "uuid", strategy = "uuid2")
    @Column(name = "uuid", unique = true)
    private String uid;

    @PropertyDefinition
    @JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)
    @Column(name = "charge")
    private String charge;

    @PropertyDefinition
    @JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)
    @Column(name = "order_id", unique = true)
    private String orderId;

    @PropertyDefinition
    @JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)
    @Column(name = "unit_id")
    private String unitId;

    @PropertyDefinition
    @JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)
    @Column(name = "invoice_id")
    private String invoiceId;

    @PropertyDefinition
    @JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)
    @Column(name = "shipping_id")
    private String shippingId;

    @PropertyDefinition
    @JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)
    @Column(name = "processed_at")
    private Date processedAt;

    @PropertyDefinition
    @JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)
    @Column(name = "invoice_printed_at")
    private Date invoicePrintedAt;

    @PropertyDefinition
    @JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)
    @Column(name = "label_printed_at")
    private Date labelPrintedAt;

    @PropertyDefinition
    @JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)
    @Column(name = "invoice_printed")
    private Boolean invoicePrinted = Boolean.FALSE;

    @PropertyDefinition
    @JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)
    @Column(name = "label_printed")
    private Boolean labelPrinted = Boolean.FALSE;

    @PropertyDefinition
    @JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)
    @Column(name = "product_type")
    private String productType;

    @PropertyDefinition
    @JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)
    @Column(name = "status")
    private String status;

    @PropertyDefinition
    @JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)
    @Column(name = "invoice")
    private Boolean invoice = Boolean.FALSE;

    @PropertyDefinition
    @JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)
    @Column(name = "label")
    private Boolean label = Boolean.FALSE;

    @PropertyDefinition
    @JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)
    @Column(name = "selected")
    private Boolean selected = Boolean.FALSE;

    //------------------------- AUTOGENERATED START -------------------------
    ///CLOVER:OFF
    /**
     * The meta-bean for {@code PrinterLog}.
     * @return the meta-bean, not null
     */
    public static PrinterLog.Meta meta() {
        return PrinterLog.Meta.INSTANCE;
    }

    static {
        JodaBeanUtils.registerMetaBean(PrinterLog.Meta.INSTANCE);
    }

    @Override
    public PrinterLog.Meta metaBean() {
        return PrinterLog.Meta.INSTANCE;
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the uid.
     * @return the value of the property
     */
    public String getUid() {
        return uid;
    }

    /**
     * Sets the uid.
     * @param uid  the new value of the property
     */
    public void setUid(String uid) {
        this.uid = uid;
    }

    /**
     * Gets the the {@code uid} property.
     * @return the property, not null
     */
    public final Property<String> uid() {
        return metaBean().uid().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the charge.
     * @return the value of the property
     */
    public String getCharge() {
        return charge;
    }

    /**
     * Sets the charge.
     * @param charge  the new value of the property
     */
    public void setCharge(String charge) {
        this.charge = charge;
    }

    /**
     * Gets the the {@code charge} property.
     * @return the property, not null
     */
    public final Property<String> charge() {
        return metaBean().charge().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the orderId.
     * @return the value of the property
     */
    public String getOrderId() {
        return orderId;
    }

    /**
     * Sets the orderId.
     * @param orderId  the new value of the property
     */
    public void setOrderId(String orderId) {
        this.orderId = orderId;
    }

    /**
     * Gets the the {@code orderId} property.
     * @return the property, not null
     */
    public final Property<String> orderId() {
        return metaBean().orderId().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the unitId.
     * @return the value of the property
     */
    public String getUnitId() {
        return unitId;
    }

    /**
     * Sets the unitId.
     * @param unitId  the new value of the property
     */
    public void setUnitId(String unitId) {
        this.unitId = unitId;
    }

    /**
     * Gets the the {@code unitId} property.
     * @return the property, not null
     */
    public final Property<String> unitId() {
        return metaBean().unitId().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the invoiceId.
     * @return the value of the property
     */
    public String getInvoiceId() {
        return invoiceId;
    }

    /**
     * Sets the invoiceId.
     * @param invoiceId  the new value of the property
     */
    public void setInvoiceId(String invoiceId) {
        this.invoiceId = invoiceId;
    }

    /**
     * Gets the the {@code invoiceId} property.
     * @return the property, not null
     */
    public final Property<String> invoiceId() {
        return metaBean().invoiceId().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the shippingId.
     * @return the value of the property
     */
    public String getShippingId() {
        return shippingId;
    }

    /**
     * Sets the shippingId.
     * @param shippingId  the new value of the property
     */
    public void setShippingId(String shippingId) {
        this.shippingId = shippingId;
    }

    /**
     * Gets the the {@code shippingId} property.
     * @return the property, not null
     */
    public final Property<String> shippingId() {
        return metaBean().shippingId().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the processedAt.
     * @return the value of the property
     */
    public Date getProcessedAt() {
        return processedAt;
    }

    /**
     * Sets the processedAt.
     * @param processedAt  the new value of the property
     */
    public void setProcessedAt(Date processedAt) {
        this.processedAt = processedAt;
    }

    /**
     * Gets the the {@code processedAt} property.
     * @return the property, not null
     */
    public final Property<Date> processedAt() {
        return metaBean().processedAt().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the invoicePrintedAt.
     * @return the value of the property
     */
    public Date getInvoicePrintedAt() {
        return invoicePrintedAt;
    }

    /**
     * Sets the invoicePrintedAt.
     * @param invoicePrintedAt  the new value of the property
     */
    public void setInvoicePrintedAt(Date invoicePrintedAt) {
        this.invoicePrintedAt = invoicePrintedAt;
    }

    /**
     * Gets the the {@code invoicePrintedAt} property.
     * @return the property, not null
     */
    public final Property<Date> invoicePrintedAt() {
        return metaBean().invoicePrintedAt().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the labelPrintedAt.
     * @return the value of the property
     */
    public Date getLabelPrintedAt() {
        return labelPrintedAt;
    }

    /**
     * Sets the labelPrintedAt.
     * @param labelPrintedAt  the new value of the property
     */
    public void setLabelPrintedAt(Date labelPrintedAt) {
        this.labelPrintedAt = labelPrintedAt;
    }

    /**
     * Gets the the {@code labelPrintedAt} property.
     * @return the property, not null
     */
    public final Property<Date> labelPrintedAt() {
        return metaBean().labelPrintedAt().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the invoicePrinted.
     * @return the value of the property
     */
    public Boolean getInvoicePrinted() {
        return invoicePrinted;
    }

    /**
     * Sets the invoicePrinted.
     * @param invoicePrinted  the new value of the property
     */
    public void setInvoicePrinted(Boolean invoicePrinted) {
        this.invoicePrinted = invoicePrinted;
    }

    /**
     * Gets the the {@code invoicePrinted} property.
     * @return the property, not null
     */
    public final Property<Boolean> invoicePrinted() {
        return metaBean().invoicePrinted().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the labelPrinted.
     * @return the value of the property
     */
    public Boolean getLabelPrinted() {
        return labelPrinted;
    }

    /**
     * Sets the labelPrinted.
     * @param labelPrinted  the new value of the property
     */
    public void setLabelPrinted(Boolean labelPrinted) {
        this.labelPrinted = labelPrinted;
    }

    /**
     * Gets the the {@code labelPrinted} property.
     * @return the property, not null
     */
    public final Property<Boolean> labelPrinted() {
        return metaBean().labelPrinted().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the productType.
     * @return the value of the property
     */
    public String getProductType() {
        return productType;
    }

    /**
     * Sets the productType.
     * @param productType  the new value of the property
     */
    public void setProductType(String productType) {
        this.productType = productType;
    }

    /**
     * Gets the the {@code productType} property.
     * @return the property, not null
     */
    public final Property<String> productType() {
        return metaBean().productType().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the status.
     * @return the value of the property
     */
    public String getStatus() {
        return status;
    }

    /**
     * Sets the status.
     * @param status  the new value of the property
     */
    public void setStatus(String status) {
        this.status = status;
    }

    /**
     * Gets the the {@code status} property.
     * @return the property, not null
     */
    public final Property<String> status() {
        return metaBean().status().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the invoice.
     * @return the value of the property
     */
    public Boolean getInvoice() {
        return invoice;
    }

    /**
     * Sets the invoice.
     * @param invoice  the new value of the property
     */
    public void setInvoice(Boolean invoice) {
        this.invoice = invoice;
    }

    /**
     * Gets the the {@code invoice} property.
     * @return the property, not null
     */
    public final Property<Boolean> invoice() {
        return metaBean().invoice().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the label.
     * @return the value of the property
     */
    public Boolean getLabel() {
        return label;
    }

    /**
     * Sets the label.
     * @param label  the new value of the property
     */
    public void setLabel(Boolean label) {
        this.label = label;
    }

    /**
     * Gets the the {@code label} property.
     * @return the property, not null
     */
    public final Property<Boolean> label() {
        return metaBean().label().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the selected.
     * @return the value of the property
     */
    public Boolean getSelected() {
        return selected;
    }

    /**
     * Sets the selected.
     * @param selected  the new value of the property
     */
    public void setSelected(Boolean selected) {
        this.selected = selected;
    }

    /**
     * Gets the the {@code selected} property.
     * @return the property, not null
     */
    public final Property<Boolean> selected() {
        return metaBean().selected().createProperty(this);
    }

    //-----------------------------------------------------------------------
    @Override
    public PrinterLog clone() {
        return JodaBeanUtils.cloneAlways(this);
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == this) {
            return true;
        }
        if (obj != null && obj.getClass() == this.getClass()) {
            PrinterLog other = (PrinterLog) obj;
            return JodaBeanUtils.equal(getUid(), other.getUid()) &&
                    JodaBeanUtils.equal(getCharge(), other.getCharge()) &&
                    JodaBeanUtils.equal(getOrderId(), other.getOrderId()) &&
                    JodaBeanUtils.equal(getUnitId(), other.getUnitId()) &&
                    JodaBeanUtils.equal(getInvoiceId(), other.getInvoiceId()) &&
                    JodaBeanUtils.equal(getShippingId(), other.getShippingId()) &&
                    JodaBeanUtils.equal(getProcessedAt(), other.getProcessedAt()) &&
                    JodaBeanUtils.equal(getInvoicePrintedAt(), other.getInvoicePrintedAt()) &&
                    JodaBeanUtils.equal(getLabelPrintedAt(), other.getLabelPrintedAt()) &&
                    JodaBeanUtils.equal(getInvoicePrinted(), other.getInvoicePrinted()) &&
                    JodaBeanUtils.equal(getLabelPrinted(), other.getLabelPrinted()) &&
                    JodaBeanUtils.equal(getProductType(), other.getProductType()) &&
                    JodaBeanUtils.equal(getStatus(), other.getStatus()) &&
                    JodaBeanUtils.equal(getInvoice(), other.getInvoice()) &&
                    JodaBeanUtils.equal(getLabel(), other.getLabel()) &&
                    JodaBeanUtils.equal(getSelected(), other.getSelected());
        }
        return false;
    }

    @Override
    public int hashCode() {
        int hash = getClass().hashCode();
        hash += hash * 31 + JodaBeanUtils.hashCode(getUid());
        hash += hash * 31 + JodaBeanUtils.hashCode(getCharge());
        hash += hash * 31 + JodaBeanUtils.hashCode(getOrderId());
        hash += hash * 31 + JodaBeanUtils.hashCode(getUnitId());
        hash += hash * 31 + JodaBeanUtils.hashCode(getInvoiceId());
        hash += hash * 31 + JodaBeanUtils.hashCode(getShippingId());
        hash += hash * 31 + JodaBeanUtils.hashCode(getProcessedAt());
        hash += hash * 31 + JodaBeanUtils.hashCode(getInvoicePrintedAt());
        hash += hash * 31 + JodaBeanUtils.hashCode(getLabelPrintedAt());
        hash += hash * 31 + JodaBeanUtils.hashCode(getInvoicePrinted());
        hash += hash * 31 + JodaBeanUtils.hashCode(getLabelPrinted());
        hash += hash * 31 + JodaBeanUtils.hashCode(getProductType());
        hash += hash * 31 + JodaBeanUtils.hashCode(getStatus());
        hash += hash * 31 + JodaBeanUtils.hashCode(getInvoice());
        hash += hash * 31 + JodaBeanUtils.hashCode(getLabel());
        hash += hash * 31 + JodaBeanUtils.hashCode(getSelected());
        return hash;
    }

    @Override
    public String toString() {
        StringBuilder buf = new StringBuilder(544);
        buf.append("PrinterLog{");
        int len = buf.length();
        toString(buf);
        if (buf.length() > len) {
            buf.setLength(buf.length() - 2);
        }
        buf.append('}');
        return buf.toString();
    }

    protected void toString(StringBuilder buf) {
        buf.append("uid").append('=').append(JodaBeanUtils.toString(getUid())).append(',').append(' ');
        buf.append("charge").append('=').append(JodaBeanUtils.toString(getCharge())).append(',').append(' ');
        buf.append("orderId").append('=').append(JodaBeanUtils.toString(getOrderId())).append(',').append(' ');
        buf.append("unitId").append('=').append(JodaBeanUtils.toString(getUnitId())).append(',').append(' ');
        buf.append("invoiceId").append('=').append(JodaBeanUtils.toString(getInvoiceId())).append(',').append(' ');
        buf.append("shippingId").append('=').append(JodaBeanUtils.toString(getShippingId())).append(',').append(' ');
        buf.append("processedAt").append('=').append(JodaBeanUtils.toString(getProcessedAt())).append(',').append(' ');
        buf.append("invoicePrintedAt").append('=').append(JodaBeanUtils.toString(getInvoicePrintedAt())).append(',').append(' ');
        buf.append("labelPrintedAt").append('=').append(JodaBeanUtils.toString(getLabelPrintedAt())).append(',').append(' ');
        buf.append("invoicePrinted").append('=').append(JodaBeanUtils.toString(getInvoicePrinted())).append(',').append(' ');
        buf.append("labelPrinted").append('=').append(JodaBeanUtils.toString(getLabelPrinted())).append(',').append(' ');
        buf.append("productType").append('=').append(JodaBeanUtils.toString(getProductType())).append(',').append(' ');
        buf.append("status").append('=').append(JodaBeanUtils.toString(getStatus())).append(',').append(' ');
        buf.append("invoice").append('=').append(JodaBeanUtils.toString(getInvoice())).append(',').append(' ');
        buf.append("label").append('=').append(JodaBeanUtils.toString(getLabel())).append(',').append(' ');
        buf.append("selected").append('=').append(JodaBeanUtils.toString(getSelected())).append(',').append(' ');
    }

    //-----------------------------------------------------------------------
    /**
     * The meta-bean for {@code PrinterLog}.
     */
    public static class Meta extends DirectMetaBean {
        /**
         * The singleton instance of the meta-bean.
         */
        static final Meta INSTANCE = new Meta();

        /**
         * The meta-property for the {@code uid} property.
         */
        private final MetaProperty<String> uid = DirectMetaProperty.ofReadWrite(
                this, "uid", PrinterLog.class, String.class);
        /**
         * The meta-property for the {@code charge} property.
         */
        private final MetaProperty<String> charge = DirectMetaProperty.ofReadWrite(
                this, "charge", PrinterLog.class, String.class);
        /**
         * The meta-property for the {@code orderId} property.
         */
        private final MetaProperty<String> orderId = DirectMetaProperty.ofReadWrite(
                this, "orderId", PrinterLog.class, String.class);
        /**
         * The meta-property for the {@code unitId} property.
         */
        private final MetaProperty<String> unitId = DirectMetaProperty.ofReadWrite(
                this, "unitId", PrinterLog.class, String.class);
        /**
         * The meta-property for the {@code invoiceId} property.
         */
        private final MetaProperty<String> invoiceId = DirectMetaProperty.ofReadWrite(
                this, "invoiceId", PrinterLog.class, String.class);
        /**
         * The meta-property for the {@code shippingId} property.
         */
        private final MetaProperty<String> shippingId = DirectMetaProperty.ofReadWrite(
                this, "shippingId", PrinterLog.class, String.class);
        /**
         * The meta-property for the {@code processedAt} property.
         */
        private final MetaProperty<Date> processedAt = DirectMetaProperty.ofReadWrite(
                this, "processedAt", PrinterLog.class, Date.class);
        /**
         * The meta-property for the {@code invoicePrintedAt} property.
         */
        private final MetaProperty<Date> invoicePrintedAt = DirectMetaProperty.ofReadWrite(
                this, "invoicePrintedAt", PrinterLog.class, Date.class);
        /**
         * The meta-property for the {@code labelPrintedAt} property.
         */
        private final MetaProperty<Date> labelPrintedAt = DirectMetaProperty.ofReadWrite(
                this, "labelPrintedAt", PrinterLog.class, Date.class);
        /**
         * The meta-property for the {@code invoicePrinted} property.
         */
        private final MetaProperty<Boolean> invoicePrinted = DirectMetaProperty.ofReadWrite(
                this, "invoicePrinted", PrinterLog.class, Boolean.class);
        /**
         * The meta-property for the {@code labelPrinted} property.
         */
        private final MetaProperty<Boolean> labelPrinted = DirectMetaProperty.ofReadWrite(
                this, "labelPrinted", PrinterLog.class, Boolean.class);
        /**
         * The meta-property for the {@code productType} property.
         */
        private final MetaProperty<String> productType = DirectMetaProperty.ofReadWrite(
                this, "productType", PrinterLog.class, String.class);
        /**
         * The meta-property for the {@code status} property.
         */
        private final MetaProperty<String> status = DirectMetaProperty.ofReadWrite(
                this, "status", PrinterLog.class, String.class);
        /**
         * The meta-property for the {@code invoice} property.
         */
        private final MetaProperty<Boolean> invoice = DirectMetaProperty.ofReadWrite(
                this, "invoice", PrinterLog.class, Boolean.class);
        /**
         * The meta-property for the {@code label} property.
         */
        private final MetaProperty<Boolean> label = DirectMetaProperty.ofReadWrite(
                this, "label", PrinterLog.class, Boolean.class);
        /**
         * The meta-property for the {@code selected} property.
         */
        private final MetaProperty<Boolean> selected = DirectMetaProperty.ofReadWrite(
                this, "selected", PrinterLog.class, Boolean.class);
        /**
         * The meta-properties.
         */
        private final Map<String, MetaProperty<?>> metaPropertyMap$ = new DirectMetaPropertyMap(
                this, null,
                "uid",
                "charge",
                "orderId",
                "unitId",
                "invoiceId",
                "shippingId",
                "processedAt",
                "invoicePrintedAt",
                "labelPrintedAt",
                "invoicePrinted",
                "labelPrinted",
                "productType",
                "status",
                "invoice",
                "label",
                "selected");

        /**
         * Restricted constructor.
         */
        protected Meta() {
        }

        @Override
        protected MetaProperty<?> metaPropertyGet(String propertyName) {
            switch (propertyName.hashCode()) {
                case 115792:  // uid
                    return uid;
                case -1361632588:  // charge
                    return charge;
                case -1207110391:  // orderId
                    return orderId;
                case -840527425:  // unitId
                    return unitId;
                case -1739442904:  // invoiceId
                    return invoiceId;
                case 2113549161:  // shippingId
                    return shippingId;
                case 203012129:  // processedAt
                    return processedAt;
                case -775152462:  // invoicePrintedAt
                    return invoicePrintedAt;
                case 1959538891:  // labelPrintedAt
                    return labelPrintedAt;
                case 271818783:  // invoicePrinted
                    return invoicePrinted;
                case -802429320:  // labelPrinted
                    return labelPrinted;
                case -1491615543:  // productType
                    return productType;
                case -892481550:  // status
                    return status;
                case 1960198957:  // invoice
                    return invoice;
                case 102727412:  // label
                    return label;
                case 1191572123:  // selected
                    return selected;
            }
            return super.metaPropertyGet(propertyName);
        }

        @Override
        public BeanBuilder<? extends PrinterLog> builder() {
            return new DirectBeanBuilder<PrinterLog>(new PrinterLog());
        }

        @Override
        public Class<? extends PrinterLog> beanType() {
            return PrinterLog.class;
        }

        @Override
        public Map<String, MetaProperty<?>> metaPropertyMap() {
            return metaPropertyMap$;
        }

        //-----------------------------------------------------------------------
        /**
         * The meta-property for the {@code uid} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<String> uid() {
            return uid;
        }

        /**
         * The meta-property for the {@code charge} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<String> charge() {
            return charge;
        }

        /**
         * The meta-property for the {@code orderId} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<String> orderId() {
            return orderId;
        }

        /**
         * The meta-property for the {@code unitId} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<String> unitId() {
            return unitId;
        }

        /**
         * The meta-property for the {@code invoiceId} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<String> invoiceId() {
            return invoiceId;
        }

        /**
         * The meta-property for the {@code shippingId} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<String> shippingId() {
            return shippingId;
        }

        /**
         * The meta-property for the {@code processedAt} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<Date> processedAt() {
            return processedAt;
        }

        /**
         * The meta-property for the {@code invoicePrintedAt} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<Date> invoicePrintedAt() {
            return invoicePrintedAt;
        }

        /**
         * The meta-property for the {@code labelPrintedAt} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<Date> labelPrintedAt() {
            return labelPrintedAt;
        }

        /**
         * The meta-property for the {@code invoicePrinted} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<Boolean> invoicePrinted() {
            return invoicePrinted;
        }

        /**
         * The meta-property for the {@code labelPrinted} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<Boolean> labelPrinted() {
            return labelPrinted;
        }

        /**
         * The meta-property for the {@code productType} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<String> productType() {
            return productType;
        }

        /**
         * The meta-property for the {@code status} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<String> status() {
            return status;
        }

        /**
         * The meta-property for the {@code invoice} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<Boolean> invoice() {
            return invoice;
        }

        /**
         * The meta-property for the {@code label} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<Boolean> label() {
            return label;
        }

        /**
         * The meta-property for the {@code selected} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<Boolean> selected() {
            return selected;
        }

        //-----------------------------------------------------------------------
        @Override
        protected Object propertyGet(Bean bean, String propertyName, boolean quiet) {
            switch (propertyName.hashCode()) {
                case 115792:  // uid
                    return ((PrinterLog) bean).getUid();
                case -1361632588:  // charge
                    return ((PrinterLog) bean).getCharge();
                case -1207110391:  // orderId
                    return ((PrinterLog) bean).getOrderId();
                case -840527425:  // unitId
                    return ((PrinterLog) bean).getUnitId();
                case -1739442904:  // invoiceId
                    return ((PrinterLog) bean).getInvoiceId();
                case 2113549161:  // shippingId
                    return ((PrinterLog) bean).getShippingId();
                case 203012129:  // processedAt
                    return ((PrinterLog) bean).getProcessedAt();
                case -775152462:  // invoicePrintedAt
                    return ((PrinterLog) bean).getInvoicePrintedAt();
                case 1959538891:  // labelPrintedAt
                    return ((PrinterLog) bean).getLabelPrintedAt();
                case 271818783:  // invoicePrinted
                    return ((PrinterLog) bean).getInvoicePrinted();
                case -802429320:  // labelPrinted
                    return ((PrinterLog) bean).getLabelPrinted();
                case -1491615543:  // productType
                    return ((PrinterLog) bean).getProductType();
                case -892481550:  // status
                    return ((PrinterLog) bean).getStatus();
                case 1960198957:  // invoice
                    return ((PrinterLog) bean).getInvoice();
                case 102727412:  // label
                    return ((PrinterLog) bean).getLabel();
                case 1191572123:  // selected
                    return ((PrinterLog) bean).getSelected();
            }
            return super.propertyGet(bean, propertyName, quiet);
        }

        @Override
        protected void propertySet(Bean bean, String propertyName, Object newValue, boolean quiet) {
            switch (propertyName.hashCode()) {
                case 115792:  // uid
                    ((PrinterLog) bean).setUid((String) newValue);
                    return;
                case -1361632588:  // charge
                    ((PrinterLog) bean).setCharge((String) newValue);
                    return;
                case -1207110391:  // orderId
                    ((PrinterLog) bean).setOrderId((String) newValue);
                    return;
                case -840527425:  // unitId
                    ((PrinterLog) bean).setUnitId((String) newValue);
                    return;
                case -1739442904:  // invoiceId
                    ((PrinterLog) bean).setInvoiceId((String) newValue);
                    return;
                case 2113549161:  // shippingId
                    ((PrinterLog) bean).setShippingId((String) newValue);
                    return;
                case 203012129:  // processedAt
                    ((PrinterLog) bean).setProcessedAt((Date) newValue);
                    return;
                case -775152462:  // invoicePrintedAt
                    ((PrinterLog) bean).setInvoicePrintedAt((Date) newValue);
                    return;
                case 1959538891:  // labelPrintedAt
                    ((PrinterLog) bean).setLabelPrintedAt((Date) newValue);
                    return;
                case 271818783:  // invoicePrinted
                    ((PrinterLog) bean).setInvoicePrinted((Boolean) newValue);
                    return;
                case -802429320:  // labelPrinted
                    ((PrinterLog) bean).setLabelPrinted((Boolean) newValue);
                    return;
                case -1491615543:  // productType
                    ((PrinterLog) bean).setProductType((String) newValue);
                    return;
                case -892481550:  // status
                    ((PrinterLog) bean).setStatus((String) newValue);
                    return;
                case 1960198957:  // invoice
                    ((PrinterLog) bean).setInvoice((Boolean) newValue);
                    return;
                case 102727412:  // label
                    ((PrinterLog) bean).setLabel((Boolean) newValue);
                    return;
                case 1191572123:  // selected
                    ((PrinterLog) bean).setSelected((Boolean) newValue);
                    return;
            }
            super.propertySet(bean, propertyName, newValue, quiet);
        }

    }

    ///CLOVER:ON
    //-------------------------- AUTOGENERATED END --------------------------
}
