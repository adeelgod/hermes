package com.m11n.hermes.core.model;

import javax.persistence.*;
import javax.xml.bind.annotation.XmlRootElement;

import org.joda.beans.BeanDefinition;
import org.joda.beans.MetaBean;
import org.joda.beans.PropertyDefinition;
import org.joda.beans.impl.direct.DirectBean;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.util.Map;
import org.joda.beans.Bean;
import org.joda.beans.BeanBuilder;
import org.joda.beans.JodaBeanUtils;
import org.joda.beans.MetaProperty;
import org.joda.beans.Property;
import org.joda.beans.impl.direct.DirectBeanBuilder;
import org.joda.beans.impl.direct.DirectMetaBean;
import org.joda.beans.impl.direct.DirectMetaProperty;
import org.joda.beans.impl.direct.DirectMetaPropertyMap;

@BeanDefinition
@JsonIgnoreProperties({"meta", "metaBean"})
@XmlRootElement(name = "documents_printjob")
@Entity
@Table(name = "hermes_documents_tub_group")
public class DocumentsTubGroup extends DirectBean {
    @PropertyDefinition
    @JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)
    @Id
    @Column(name = "id", unique = true)
    @GeneratedValue
    private Integer id;
    
    @PropertyDefinition
    @JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)
    @Column(name = "printjob_id")
    private Integer printjobId;
    
    @PropertyDefinition
    @JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)
    @Column(name = "type")
    private String type;

    @PropertyDefinition
    @JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)
    @Column(name = "group_no")
    private Integer groupNo;
    
    @PropertyDefinition
    @JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)
    @Column(name = "tub_no")
    private Integer tubNo;
    
    @PropertyDefinition
    @JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)
    @Column(name = "size")
    private Integer size;
    
    @PropertyDefinition
    @JsonSerialize
    @Column(name = "order_id")
    private String orderId;
    
    @PropertyDefinition
    @JsonSerialize
    @Column(name = "product_id")
    private Integer productId;

    //------------------------- AUTOGENERATED START -------------------------
    ///CLOVER:OFF
    /**
     * The meta-bean for {@code DocumentsTubGroup}.
     * @return the meta-bean, not null
     */
    public static DocumentsTubGroup.Meta meta() {
        return DocumentsTubGroup.Meta.INSTANCE;
    }

    static {
        JodaBeanUtils.registerMetaBean(DocumentsTubGroup.Meta.INSTANCE);
    }

    @Override
    public DocumentsTubGroup.Meta metaBean() {
        return DocumentsTubGroup.Meta.INSTANCE;
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the id.
     * @return the value of the property
     */
    public Integer getId() {
        return id;
    }

    /**
     * Sets the id.
     * @param id  the new value of the property
     */
    public void setId(Integer id) {
        this.id = id;
    }

    /**
     * Gets the the {@code id} property.
     * @return the property, not null
     */
    public final Property<Integer> id() {
        return metaBean().id().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the printjobId.
     * @return the value of the property
     */
    public Integer getPrintjobId() {
        return printjobId;
    }

    /**
     * Sets the printjobId.
     * @param printjobId  the new value of the property
     */
    public void setPrintjobId(Integer printjobId) {
        this.printjobId = printjobId;
    }

    /**
     * Gets the the {@code printjobId} property.
     * @return the property, not null
     */
    public final Property<Integer> printjobId() {
        return metaBean().printjobId().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the type.
     * @return the value of the property
     */
    public String getType() {
        return type;
    }

    /**
     * Sets the type.
     * @param type  the new value of the property
     */
    public void setType(String type) {
        this.type = type;
    }

    /**
     * Gets the the {@code type} property.
     * @return the property, not null
     */
    public final Property<String> type() {
        return metaBean().type().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the groupNo.
     * @return the value of the property
     */
    public Integer getGroupNo() {
        return groupNo;
    }

    /**
     * Sets the groupNo.
     * @param groupNo  the new value of the property
     */
    public void setGroupNo(Integer groupNo) {
        this.groupNo = groupNo;
    }

    /**
     * Gets the the {@code groupNo} property.
     * @return the property, not null
     */
    public final Property<Integer> groupNo() {
        return metaBean().groupNo().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the tubNo.
     * @return the value of the property
     */
    public Integer getTubNo() {
        return tubNo;
    }

    /**
     * Sets the tubNo.
     * @param tubNo  the new value of the property
     */
    public void setTubNo(Integer tubNo) {
        this.tubNo = tubNo;
    }

    /**
     * Gets the the {@code tubNo} property.
     * @return the property, not null
     */
    public final Property<Integer> tubNo() {
        return metaBean().tubNo().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the size.
     * @return the value of the property
     */
    public Integer getSize() {
        return size;
    }

    /**
     * Sets the size.
     * @param size  the new value of the property
     */
    public void setSize(Integer size) {
        this.size = size;
    }

    /**
     * Gets the the {@code size} property.
     * @return the property, not null
     */
    public final Property<Integer> size() {
        return metaBean().size().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the orderId.
     * @return the value of the property
     */
    public String getOrderId() {
        return orderId;
    }

    /**
     * Sets the orderId.
     * @param orderId  the new value of the property
     */
    public void setOrderId(String orderId) {
        this.orderId = orderId;
    }

    /**
     * Gets the the {@code orderId} property.
     * @return the property, not null
     */
    public final Property<String> orderId() {
        return metaBean().orderId().createProperty(this);
    }

    //-----------------------------------------------------------------------
    /**
     * Gets the productId.
     * @return the value of the property
     */
    public Integer getProductId() {
        return productId;
    }

    /**
     * Sets the productId.
     * @param productId  the new value of the property
     */
    public void setProductId(Integer productId) {
        this.productId = productId;
    }

    /**
     * Gets the the {@code productId} property.
     * @return the property, not null
     */
    public final Property<Integer> productId() {
        return metaBean().productId().createProperty(this);
    }

    //-----------------------------------------------------------------------
    @Override
    public DocumentsTubGroup clone() {
        return JodaBeanUtils.cloneAlways(this);
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == this) {
            return true;
        }
        if (obj != null && obj.getClass() == this.getClass()) {
            DocumentsTubGroup other = (DocumentsTubGroup) obj;
            return JodaBeanUtils.equal(getId(), other.getId()) &&
                    JodaBeanUtils.equal(getPrintjobId(), other.getPrintjobId()) &&
                    JodaBeanUtils.equal(getType(), other.getType()) &&
                    JodaBeanUtils.equal(getGroupNo(), other.getGroupNo()) &&
                    JodaBeanUtils.equal(getTubNo(), other.getTubNo()) &&
                    JodaBeanUtils.equal(getSize(), other.getSize()) &&
                    JodaBeanUtils.equal(getOrderId(), other.getOrderId()) &&
                    JodaBeanUtils.equal(getProductId(), other.getProductId());
        }
        return false;
    }

    @Override
    public int hashCode() {
        int hash = getClass().hashCode();
        hash = hash * 31 + JodaBeanUtils.hashCode(getId());
        hash = hash * 31 + JodaBeanUtils.hashCode(getPrintjobId());
        hash = hash * 31 + JodaBeanUtils.hashCode(getType());
        hash = hash * 31 + JodaBeanUtils.hashCode(getGroupNo());
        hash = hash * 31 + JodaBeanUtils.hashCode(getTubNo());
        hash = hash * 31 + JodaBeanUtils.hashCode(getSize());
        hash = hash * 31 + JodaBeanUtils.hashCode(getOrderId());
        hash = hash * 31 + JodaBeanUtils.hashCode(getProductId());
        return hash;
    }

    @Override
    public String toString() {
        StringBuilder buf = new StringBuilder(288);
        buf.append("DocumentsTubGroup{");
        int len = buf.length();
        toString(buf);
        if (buf.length() > len) {
            buf.setLength(buf.length() - 2);
        }
        buf.append('}');
        return buf.toString();
    }

    protected void toString(StringBuilder buf) {
        buf.append("id").append('=').append(JodaBeanUtils.toString(getId())).append(',').append(' ');
        buf.append("printjobId").append('=').append(JodaBeanUtils.toString(getPrintjobId())).append(',').append(' ');
        buf.append("type").append('=').append(JodaBeanUtils.toString(getType())).append(',').append(' ');
        buf.append("groupNo").append('=').append(JodaBeanUtils.toString(getGroupNo())).append(',').append(' ');
        buf.append("tubNo").append('=').append(JodaBeanUtils.toString(getTubNo())).append(',').append(' ');
        buf.append("size").append('=').append(JodaBeanUtils.toString(getSize())).append(',').append(' ');
        buf.append("orderId").append('=').append(JodaBeanUtils.toString(getOrderId())).append(',').append(' ');
        buf.append("productId").append('=').append(JodaBeanUtils.toString(getProductId())).append(',').append(' ');
    }

    //-----------------------------------------------------------------------
    /**
     * The meta-bean for {@code DocumentsTubGroup}.
     */
    public static class Meta extends DirectMetaBean {
        /**
         * The singleton instance of the meta-bean.
         */
        static final Meta INSTANCE = new Meta();

        /**
         * The meta-property for the {@code id} property.
         */
        private final MetaProperty<Integer> id = DirectMetaProperty.ofReadWrite(
                this, "id", DocumentsTubGroup.class, Integer.class);
        /**
         * The meta-property for the {@code printjobId} property.
         */
        private final MetaProperty<Integer> printjobId = DirectMetaProperty.ofReadWrite(
                this, "printjobId", DocumentsTubGroup.class, Integer.class);
        /**
         * The meta-property for the {@code type} property.
         */
        private final MetaProperty<String> type = DirectMetaProperty.ofReadWrite(
                this, "type", DocumentsTubGroup.class, String.class);
        /**
         * The meta-property for the {@code groupNo} property.
         */
        private final MetaProperty<Integer> groupNo = DirectMetaProperty.ofReadWrite(
                this, "groupNo", DocumentsTubGroup.class, Integer.class);
        /**
         * The meta-property for the {@code tubNo} property.
         */
        private final MetaProperty<Integer> tubNo = DirectMetaProperty.ofReadWrite(
                this, "tubNo", DocumentsTubGroup.class, Integer.class);
        /**
         * The meta-property for the {@code size} property.
         */
        private final MetaProperty<Integer> size = DirectMetaProperty.ofReadWrite(
                this, "size", DocumentsTubGroup.class, Integer.class);
        /**
         * The meta-property for the {@code orderId} property.
         */
        private final MetaProperty<String> orderId = DirectMetaProperty.ofReadWrite(
                this, "orderId", DocumentsTubGroup.class, String.class);
        /**
         * The meta-property for the {@code productId} property.
         */
        private final MetaProperty<Integer> productId = DirectMetaProperty.ofReadWrite(
                this, "productId", DocumentsTubGroup.class, Integer.class);
        /**
         * The meta-properties.
         */
        private final Map<String, MetaProperty<?>> metaPropertyMap$ = new DirectMetaPropertyMap(
                this, null,
                "id",
                "printjobId",
                "type",
                "groupNo",
                "tubNo",
                "size",
                "orderId",
                "productId");

        /**
         * Restricted constructor.
         */
        protected Meta() {
        }

        @Override
        protected MetaProperty<?> metaPropertyGet(String propertyName) {
            switch (propertyName.hashCode()) {
                case 3355:  // id
                    return id;
                case 148871979:  // printjobId
                    return printjobId;
                case 3575610:  // type
                    return type;
                case 293428384:  // groupNo
                    return groupNo;
                case 110710690:  // tubNo
                    return tubNo;
                case 3530753:  // size
                    return size;
                case -1207110391:  // orderId
                    return orderId;
                case -1051830678:  // productId
                    return productId;
            }
            return super.metaPropertyGet(propertyName);
        }

        @Override
        public BeanBuilder<? extends DocumentsTubGroup> builder() {
            return new DirectBeanBuilder<DocumentsTubGroup>(new DocumentsTubGroup());
        }

        @Override
        public Class<? extends DocumentsTubGroup> beanType() {
            return DocumentsTubGroup.class;
        }

        @Override
        public Map<String, MetaProperty<?>> metaPropertyMap() {
            return metaPropertyMap$;
        }

        //-----------------------------------------------------------------------
        /**
         * The meta-property for the {@code id} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<Integer> id() {
            return id;
        }

        /**
         * The meta-property for the {@code printjobId} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<Integer> printjobId() {
            return printjobId;
        }

        /**
         * The meta-property for the {@code type} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<String> type() {
            return type;
        }

        /**
         * The meta-property for the {@code groupNo} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<Integer> groupNo() {
            return groupNo;
        }

        /**
         * The meta-property for the {@code tubNo} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<Integer> tubNo() {
            return tubNo;
        }

        /**
         * The meta-property for the {@code size} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<Integer> size() {
            return size;
        }

        /**
         * The meta-property for the {@code orderId} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<String> orderId() {
            return orderId;
        }

        /**
         * The meta-property for the {@code productId} property.
         * @return the meta-property, not null
         */
        public final MetaProperty<Integer> productId() {
            return productId;
        }

        //-----------------------------------------------------------------------
        @Override
        protected Object propertyGet(Bean bean, String propertyName, boolean quiet) {
            switch (propertyName.hashCode()) {
                case 3355:  // id
                    return ((DocumentsTubGroup) bean).getId();
                case 148871979:  // printjobId
                    return ((DocumentsTubGroup) bean).getPrintjobId();
                case 3575610:  // type
                    return ((DocumentsTubGroup) bean).getType();
                case 293428384:  // groupNo
                    return ((DocumentsTubGroup) bean).getGroupNo();
                case 110710690:  // tubNo
                    return ((DocumentsTubGroup) bean).getTubNo();
                case 3530753:  // size
                    return ((DocumentsTubGroup) bean).getSize();
                case -1207110391:  // orderId
                    return ((DocumentsTubGroup) bean).getOrderId();
                case -1051830678:  // productId
                    return ((DocumentsTubGroup) bean).getProductId();
            }
            return super.propertyGet(bean, propertyName, quiet);
        }

        @Override
        protected void propertySet(Bean bean, String propertyName, Object newValue, boolean quiet) {
            switch (propertyName.hashCode()) {
                case 3355:  // id
                    ((DocumentsTubGroup) bean).setId((Integer) newValue);
                    return;
                case 148871979:  // printjobId
                    ((DocumentsTubGroup) bean).setPrintjobId((Integer) newValue);
                    return;
                case 3575610:  // type
                    ((DocumentsTubGroup) bean).setType((String) newValue);
                    return;
                case 293428384:  // groupNo
                    ((DocumentsTubGroup) bean).setGroupNo((Integer) newValue);
                    return;
                case 110710690:  // tubNo
                    ((DocumentsTubGroup) bean).setTubNo((Integer) newValue);
                    return;
                case 3530753:  // size
                    ((DocumentsTubGroup) bean).setSize((Integer) newValue);
                    return;
                case -1207110391:  // orderId
                    ((DocumentsTubGroup) bean).setOrderId((String) newValue);
                    return;
                case -1051830678:  // productId
                    ((DocumentsTubGroup) bean).setProductId((Integer) newValue);
                    return;
            }
            super.propertySet(bean, propertyName, newValue, quiet);
        }

    }

    ///CLOVER:ON
    //-------------------------- AUTOGENERATED END --------------------------
}
