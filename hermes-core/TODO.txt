- persistence repository to check intraship status
- REST service to check intraship status (via SQL queries for each order ID)
- REST service invoke Magento label service
- REST service custom "lieferschein" function by Indians

- x DHL 5pack korrigieren
- x enable charge
- x magento "ping" function call
- x magento webservice username, login
- x from, until vorbelegen mit "heute mitternacht - 24h" (hardcoded in javascript)
- x windows paths
- single-step ausführung für die checks (check1, check2)
- debug ausgabe der webservices (mit order nummer, highlight aktuelle order nummer in tabelle)
- aktiviere den Magento Service
- prio 2: bündel pdfs in zips, dann ssh copy
- prio 2: UI für label status

[6:21:04 PM] Daniel Schaaf:

SELECT `Bestellung`,`weight`,`Firma`,`Kunden_vorname`,`Kunden_name`,`str1`,`str2`,`PLZ`,`Ort`,`Land`,`DHL_Account` FROM `mage_custom_order` WHERE `Status` = "processing";
erstellt die Liste wenn dann alles fertig ist
Select `Bestellung`,`weight`,`Firma`,`Kunden_vorname`,`Kunden_name`,`str1`,`str2`,`PLZ`,`Ort`,`Land`,`DHL_Account` FROM `mage_custom_order` WHERE Datum_Lieferung like "2014-10-12%";
damit können wir mit bestellungen aus der Vergangenheit testen
SELECT * FROM  `mage_custom_order`  WHERE str1 RLIKE  '^[0-9]+$' or Length(Firma) > 30 or Length(`Kunden_vorname`) > 30 or   Length(`Kunden_name`)> 30   or   Length(`str1`)> 30  or   Length(`str2`)> 30  or   Length(`Ort`)> 30  or   Length(`Telefon`)< 1 or  ( Length(`PLZ`) !=5 and `Land` = "DE") or (str1 like "%packstat%" and length(`DHL_Account`) < 5) OR weight > 28
das holt Dir alle raus, die sicher nicht funtionieren werden
und damit kannst Du dann für eine Bestellung aus der Vergangenheit die Intraship response simmulieren
Select comment from l_carb_shop_de.mage_sales_flat_shipment_comment where parent_id = (select shipping_id from Auswertung.mage_custom_order where Bestellung = [betellnummer])  order by created_at limit 0,3
für den 2. und dritten versuch nummst Du dann limit 1,3 bzw limit 2,3
das sollte ganz realistische Ergebnisse bringen
damit kannst Du dann das FehlerHandling testen

get invalid shipments (27.10.2014 has some:
Select parent_id, created_at, comment from l_carb_shop_de.mage_sales_flat_shipment_comment where comment like "%Invalid%" and created_at >= "2014-10-11"

- x parameters with width
- x missing name field for forms
- x new form on list
- x column widths
- x lookup values
- x sql functions replacement (actually not necessary, because these constant values can be integrated in the query)
- x sql editor
- x default values are not set
- x menus
- x major UI cleanup
- print preview pdf dynamicreports
- delete forms in list not working

==================================================================================================================================

- x route invoices and labels to separate queues
- x split separate pages and move to temp folder
- x extract order id
- x create folder with order id as name
- x rename files (label.pdf, invoice.pdf) and store them in order id folder (coming from temp folder)
- x create database entries
- x log entries REST (HATEOAS)
- x order sql statement completely configurable
  - x SELECT `order_id`, `Bestellung`, concat("Bestellung: ",`Bestellung`),`shipping_lable` FROM `mage_custom_order` WHERE `Status` = "complete" and `Datum_Lieferung` > "2014-11-02 12:04:12" and `Datum_Lieferung` < "2014-11-03 12:04:12";
  - x SELECT COUNT( * ) AS  `Zeilen` , sum(`Anzahl`),  `Produkt_name` FROM  `mage_custom_order_single_item` where order_id in (12345, 2346, 5678, 14532)
- x stream PDF
- x datetime selector
- x archiv verzeichnis (manuell und automatisch)
- x first report, then invoice/label
- x fix manuel select
- x execute form based sql statements
- x login
- x copy single paged labels
- x move all sql related stuff to persistence layer; add main database
- x execute on startup queries
- x move order positions
- x separate pageable; expose all possibilities
- x check spec again
- x enable encrypted passwords
- x check if invoice/label file exist
- x switch mysql
- x executable
- enable update/insert queries (test!)
- send issues via email
- check job status codes
- ? per document print method selection (invoice, label, report)
- ? schedule queries
- x doc
- print queues
  - x select
  - x start
  - x configure
  - check printer status
  - ? stop
  - ? resume
- x paging
- x configuration UI
- x configuration save
- x report:
  - x upload
  - x print
- x report (send order parameters as report parameters)
- x authentication
- x SQL "functions" with forms:
  - x text, boolean, date/time fields
  - x list forms
  - x create/save
- x everything is overwrite
- installer
- x ssh tunnel
- x mysql:
  - x db: Auswertung
  - x host: http://188.138.99.252/phpmyadmin
  - x username: print
  - x password: edgtds45
  - x tunnel: ssh print@188.138.99.252 -L 13306:127.0.0.1:3306 -N

SQL:

insert ignore into mage_custom_order  (`Bestellung`, `order_id`, `weight`, `Kundenummer`, `Kunden_email`, `Kunden_vorname`, `Kunden_name`, `Datum_Kauf`, `GesamtPreis_der_Bestellung_Brutto`,`total_refunded_netto`,`discount`, `erstattet`, `Versandkosten_netto`, `Versandkosten_erstattet`, `Nachnahme`) select b.increment_id, b.entity_id, b.weight, b.customer_id, b.customer_email, b.customer_firstname, b.customer_lastname,  b.created_at,  b.grand_total ,b.base_total_offline_refunded +base_total_online_refunded ,-b.base_discount_amount, b.base_total_refunded, b.base_shipping_amount, b.shipping_refunded, b.cod_fee from  l_carb_shop_de.mage_sales_flat_order as b   ;
update  mage_custom_order as a left join  l_carb_shop_de.mage_m2epro_order as b on b.magento_order_id = a.order_id set a.m2e_order_id = b.id where b.magento_order_id = a.order_id;
update  mage_custom_order as a left join  l_carb_shop_de.mage_m2epro_ebay_order  as b on b.order_id    =  a.m2e_order_id set a.ebay_order_id = b.ebay_order_id , a.Kunden_ebay_name = b.buyer_user_id where b.order_id    =  a.m2e_order_id ;
update  mage_custom_order as a left join  l_carb_shop_de.mage_m2epro_amazon_order as b on b.order_id    =  a.m2e_order_id set a.amazon_order_id = b.amazon_order_id where b.order_id    =  a.m2e_order_id  ;
update  mage_custom_order as a left join   l_carb_shop_de.mage_m2epro_ebay_order_external_transaction   as b on b.order_id    =  a.m2e_order_id set a.`Paypal_id_ebay`=b.transaction_id , a.`Paypal_Umsatz_ebay` =b.`sum` , a.`Paypal_gebueren_ebay`=b.fee  where b.order_id    =  a.m2e_order_id   ;
update  mage_custom_order as a left join   l_carb_shop_de.mage_sales_flat_invoice    as b on b.order_id    =  a.order_id  set a.`invoice_id`=b.`entity_id` , a.`Paypal_id_shop` =b.`transaction_id`, a.VAT = b.tax_amount   where b.order_id    =  a.order_id    ;
update  mage_custom_order as a left join   l_carb_shop_de.mage_sales_flat_order_payment    as b on b.parent_id    =  a.order_id  set a.`method`=b.`method`    where b.parent_id    =  a.order_id    ;
update  mage_custom_order as a left join  l_carb_shop_de.mage_sales_flat_order    as b on b.entity_id    =  a.order_id  set a.`status`=b.`status`    where b.entity_id    =  a.order_id    ;
update  mage_custom_order as a left join  l_carb_shop_de.mage_sales_flat_shipment    as b on b.order_id    =  a.order_id  set a.`shipping_id`=b.`entity_id`, a.`Datum_Lieferung`  =b.updated_at, a.`Monat` = date_format(b.created_at,'%c') ,a. `Jahr` = date_format(b.created_at,'%Y')    where b.order_id    =  a.order_id    ;
update  mage_custom_order as a left join  l_carb_shop_de.mage_sales_flat_order    as b on b.entity_id    =  a.order_id  set a.`status`=b.`status`    where b.entity_id    =  a.order_id    ;
update  mage_custom_order as a left join  l_carb_shop_de.mage_sales_flat_shipment_track    as b on b.parent_id    =  a.shipping_id  set a.`shipping_lable`=b.`track_number`    where b.parent_id    =  a.shipping_id      ;
update  mage_custom_order as a left join   l_carb_shop_de.mage_sales_flat_order_address    as b on b.parent_id    =  a.order_id  set a.`ort`=b.`city`, a.land = b.country_id, a.PLZ = b.postcode    where  b.parent_id    =  a.order_id    ;


insert ignore into mage_custom_order_item( `Item_id`, order_id, `Produkt_id`, `Produkt_name`, `Anzahl`, `Preis_netto`, `Gesamtpreis_netto_aus_Item`, `Steuersatz`, `MWsT`) select a.item_id, a.order_id,  a.product_id, a.name, a.qty_ordered, a.price, a.qty_ordered* a.price as summe_produkte, a.tax_percent, a.tax_amount  from l_carb_shop_de.mage_sales_flat_order_item as a;


INSERT ignore INTO `mage_custom_order_single_item` (`item_id`, `order_id`, `Produkt_id`, `Produkt_name`, `Anzahl`, `Preis_netto`, `Gesamtpreis_netto_aus_Item`, `Steuersatz`, `MWsT`, `product_type`, `product_kind`, `product_DB1`, `product_wight`, `Volumen`) select a.`item_id`, a.`order_id`, a.`Produkt_id`, a.`Produkt_name`, a.`Anzahl`, a.`Preis_netto`, a.`Gesamtpreis_netto_aus_Item`, a.`Steuersatz`, a.`MWsT`, b.`product_type`, b.`product_kind`, b.`product_DB1`, b.`product_wight`, b.`Volumen` from `mage_custom_order_item` as a left join  l_carb_shop_de.mage_custom_product_type as b on a.`Produkt_id` = b.`Product_id` where  a.`Produkt_id` = b.`Product_id` and (product_type = "Eimer" or product_type = "Zusatz");
INSERT ignore INTO `mage_custom_order_single_item` (`item_id`, `order_id`, `Produkt_id`, `Produkt_name`, `Anzahl`, `Preis_netto`, `Gesamtpreis_netto_aus_Item`, `Steuersatz`, `MWsT`, `product_type`, `product_kind`, `product_DB1`, `product_wight`, `Volumen`) select a.`item_id`, a.`order_id`, c.`product_id_base`, a.`Produkt_name`, a.`Anzahl`, a.`Preis_netto`, a.`Gesamtpreis_netto_aus_Item`, a.`Steuersatz`, a.`MWsT`, b.`product_type`, b.`product_kind`, b.`product_DB1`, b.`product_wight`, b.`Volumen` from `mage_custom_order_item` as a left join  l_carb_shop_de.mage_custom_product_type as b on a.`Produkt_id` = b.`Product_id`  left join  l_carb_shop_de.mage_custom_transfer_stock as c on a.`Produkt_id` = c.`product_id_to_be_transfered` where  a.`Produkt_id` = b.`Product_id` and (product_type = "ebay_verb" or product_type = "amazon_verb" or product_type = "Bundle") and a.`Produkt_id` = c.`product_id_to_be_transfered`;

Update  `mage_custom_order_single_item` as a  left join  l_carb_shop_de.mage_custom_product_type as b on a.`Produkt_id` = b.`Product_id`  set a.Produkt_name = b.`product_name`, a.product_type = b.`product_type`, a.`product_kind` = b.`product_kind`, a. product_DB1  = b. product_DB1, a.product_wight = b.product_wight, a.Volumen = b.Volumen, a.Steuersatz = b.tax where a.`Produkt_id` = b.`Product_id`;
Update  `mage_custom_order_single_item` as a  left join  mage_custom_order as b on a.`order_id` = b.`order_id`  set a.order_status = b.`Status` , a.Datum_Lieferung = b.Datum_Lieferung, a.monat = b.monat, a.jahr = b.jahr where a.`order_id` = b.`order_id`;
