<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

    <!-- TODO\ pdf - do we need it -->
    <bean id="pdfFilter" class="org.apache.camel.component.file.AntPathMatcherGenericFileFilter">
        <property name="includes" value="*.pdf"/>
    </bean>

    <!-- TODO\ splits - do we need it -->
    <bean id="splitFileRepo" class="org.apache.camel.processor.idempotent.FileIdempotentRepository">
        <property name="fileStore">
            <bean class="java.io.File">
                <constructor-arg value="{{java.io.tmpdir}}/.splitcache" />
            </bean>
        </property>
    </bean>

    <!-- bank statements -->
    <bean id="csvFidor" class="org.apache.camel.component.file.AntPathMatcherGenericFileFilter">
        <property name="includes" value="*Fidorpay-Transaktionen.csv"/>
    </bean>
    <bean id="csvHypovereinsbank" class="org.apache.camel.component.file.AntPathMatcherGenericFileFilter">
        <property name="includes" value="*13536163_Umsatzliste*.csv"/>
    </bean>
    <bean id="csvPaypal" class="org.apache.camel.component.file.AntPathMatcherGenericFileFilter">
        <property name="includes" value="*TRR*.csv"/>
    </bean>
    <bean id="tabPaypal" class="org.apache.camel.component.file.AntPathMatcherGenericFileFilter">
        <property name="includes" value="*TRR*.tab"/>
    </bean>

    <!-- stamps -->
    <bean id="jpgFilter" class="org.apache.camel.component.file.AntPathMatcherGenericFileFilter">
        <property name="includes" value="*.jpg"/>
    </bean>

    <!-- zip -->
    <bean id="zipFilter" class="org.apache.camel.component.file.AntPathMatcherGenericFileFilter">
        <property name="includes" value="*.zip"/>
    </bean>
    <bean id="zipSplitter" class="org.apache.camel.dataformat.zipfile.ZipSplitter" />

    <camelContext id="camel" xmlns="http://camel.apache.org/schema/spring">
        <!-- TODO: DO WE NEED IT -->
        <route>
            <from uri="file://{{hermes.inbox.dir}}?readLock=rename&amp;move={{hermes.archive.dir}}&amp;idempotentKey=${file:name}-${file:size}-${file:modified}&amp;idempotentRepository=#splitFileRepo&amp;filter=#pdfFilter" />
            <to uri="bean:documentSplitProcessor"/>
        </route>

        <!-- zips -->
        <route>
            <from uri="file://{{hermes.inbox.dir}}/?move={{hermes.archive.dir}}&amp;filter=#zipFilter" />
            <split streaming="true">
                <ref>zipSplitter</ref>
                <convertBodyTo type="java.lang.String" />
                <to uri="file://{{hermes.inbox.dir}}" />
            </split>
        </route>

        <!-- fidor -->
        <route>
            <from uri="file://{{hermes.inbox.dir}}?move={{hermes.archive.dir}}&amp;filter=#csvFidor&amp;charset=UTF-8" />
            <unmarshal>
                <csv delimiter=";"/>
            </unmarshal>
            <to uri="bean:fidorStatementsProcessor"/>
        </route>

        <!-- hypovereins -->
        <route>
            <from uri="file://{{hermes.inbox.dir}}?move={{hermes.archive.dir}}&amp;filter=#csvHypovereinsbank&amp;charset=WINDOWS-1252" />
            <unmarshal>
                <csv delimiter=";"/>
            </unmarshal>
            <to uri="bean:hypovereinsStatementsProcessor"/>
        </route>

        <!-- paypal -->
        <route>
            <from uri="file://{{hermes.inbox.dir}}?move={{hermes.archive.dir}}&amp;filter=#csvPaypal&amp;charset=UTF-8" />
            <unmarshal>
                <csv delimiter=";"/>
            </unmarshal>
            <to uri="bean:paypalStatementsProcessor"/>
        </route>

        <!-- stamps -->
        <route>
            <from uri="file://{{hermes.inbox.dir}}?move={{hermes.stamps.archive.dir}}&amp;include=.*.jpg|.*.jpeg" />
            <convertBodyTo type="java.io.File" />
            <to uri="bean:hermesStampProcessor"/>
        </route>
    </camelContext>

</beans>
