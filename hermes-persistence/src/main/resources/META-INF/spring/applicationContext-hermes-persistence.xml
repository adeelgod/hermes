<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <jpa:repositories base-package="com.m11n.hermes.persistence"/>

    <bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource">
        <property name="username" value="${hermes.db.username}" />
        <property name="password" value="${hermes.db.password}" />
        <property name="driverClass" value="${hermes.db.driver}" />
        <property name="jdbcUrl" value="${hermes.db.url}" />
    </bean>

    <bean id="dataSourceShop" class="com.jolbox.bonecp.BoneCPDataSource" depends-on="sshTunnel">
        <property name="username" value="${hermes.shop.db.username}" />
        <property name="password" value="${hermes.shop.db.password}" />
        <!--
        <property name="driverClass" value="com.mysql.fabric.jdbc.FabricMySQLDriver" />
        -->
        <property name="driverClass" value="${hermes.shop.db.driver}" />
        <property name="jdbcUrl" value="${hermes.shop.db.url}" />
    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
        <constructor-arg ref="dataSourceShop" />
    </bean>

    <!-- Transaction -->

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <bean id="transactionManagerShop" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSourceShop" />
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="dataSource" ref="dataSource" />
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>
    
    <bean id="vendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
        <property name="generateDdl" value="true" />
    </bean>

    <!-- Entity Manager -->

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="jpaVendorAdapter" ref="vendorAdapter" />
        <property name="dataSource" ref="dataSource" />
        <property name="packagesToScan" value="com.m11n.hermes" />
        <property name="jpaPropertyMap">
            <map>
                <entry key="hibernate.dialect" value="${hibernate.dialect}" />
                <entry key="hibernate.ejb.naming_strategy" value="${hibernate.ejb.naming_strategy}" />
                <entry key="hibernate.format_sql" value="${hibernate.format_sql}" />
                <entry key="hibernate.show_sql" value="${hibernate.show_sql}" />
                <entry key="hibernate.hbm2ddl.auto" value="update" />
            </map>
        </property>
    </bean>

    <!-- the transactional advice (i.e. what 'happens'; see the <aop:advisor/> bean below) -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <!-- the transactional semantics... -->
        <tx:attributes>
            <!-- tx:method name="c*" read-only="true" propagation="SUPPORTS"/ -->
            <tx:method name="*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:pointcut id="daoOperation" expression="execution(* com.m11n.hermes.persistence.*Repository.*(..))"/>
        <aop:advisor id="serviceTx" advice-ref="txAdvice" pointcut-ref="daoOperation"/>
    </aop:config>
</beans>
